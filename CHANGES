EZDSL Change Log
======================================================================

     Ver
Num  Fixed File          Typ  Description
----------------------------------------------------------------------
001  1.00  EZDSLLST.PAS  fix  Iterate doesn't return nil as default
           EZDSLDBL.PAS
           EZDSLSKP.PAS
002  1.00  EZDSLLST.PAS  fix  @Self is used instead of Self
           EZDSLDBL.PAS
           EZDSLSKP.PAS
           EZDSLBTR.PAS
003  2.00  EZDSLCOL.PAS  enh  Raise exception on bad case switch
           EZDSLBTR.PAS
004  2.00  various       enh  Removal of else clauses for certain ifs
005  2.00  EZDSLCOL.PAS  fix  TEZCollection.Clone always duped data
006  2.00  EZDSLBSE.PAS  enh  DupData can be set at all times
007  2.00  EZDSLLST.PAS  fix  Sorted lists are always produced from
           EZDSLDBL.PAS       sorted lists
008  2.00  EZDSLCOL.PAS  fix  TEZCollection.Assign always duped data
009  3.00  EZDSLHSH.PAS  fix  The hash method can sometimes return a
                              negative number
010  3.00  EZDSLBAR.PAS  enh  Added a boolean array class
011  3.01  EZDSLLST.PAS  fix  If Search successfully finds a data
           EZDSLDBL.PAS       object in a single & double linked list
                              it would not return the cursor.
012  3.01  EZDSLOPT.INC  fix  Support for Delphi 4 & 5
           EZDSLBTR.PAS
           EZDSLTHD.PAS
013  3.02  EZDSLBAR.PAS  fix  Numerous fixes to boolean array class
014  3.02  EZDSLOPT.INC  fix  Support for Delphi 6


======================================================================

001  1.00  EZDSLLST.PAS  fix  Iterate doesn't return nil as default
           EZDSLDBL.PAS
           EZDSLSKP.PAS
----------------------------------------------------------------------
The Iterate method is supposed to return nil if none of the calls to
the Action routine return false. The fix is the same to all of the
Iterate routines: add the following line as the last statement of
the routine:

       end;
     Result := nil;                                              {!!.01}
   end;
 {--------}


002  1.00  EZDSLLST.PAS  fix  @Self is used instead of Self
           EZDSLDBL.PAS
           EZDSLSKP.PAS
           EZDSLBTR.PAS
----------------------------------------------------------------------
In the various Iterate methods defined in the above source files the
container object is passed to the Action function as @Self. It should
be Self. Whereever @Self is found in the above files, replace with
Self.


003  2.00  EZDSLCOL.PAS  enh  Raise exception on bad case switch
           EZDSLBTR.PAS
----------------------------------------------------------------------
As an enhancement, any case statement without an else clause was
expanded to include one. The else clause would raise an exception to
indicate that an invalid switch value was given:

  case ... of
    ...
  else                                                   {!!.01}
    RaiseError(escBadCaseSwitch);                        {!!.01}
  end;{case}


004  2.00  various       enh  Removal of else clauses for certain ifs
----------------------------------------------------------------------
Certain if statements were constructed thus:

  if there is an error condition then
    raise an exception
  else
    do something

These if..then..else statements were rewritten as such:

  if there is an error condition then
    raise an exception
  do something

since is an exception is raised no other statements will be executed
after the statement that raises the exception. These changes have in
general NOT been marked.


005  2.00  EZDSLCOL.PAS  fix  TEZCollection.Clone always duped data
----------------------------------------------------------------------
The TEZCollection.Clone method always duplicated the data, whether the
collection was a data owner or not. The fix is to test for data
ownership, if true the data is duplicated, if false the pointer value
is copied over:

constructor TEZCollection.Clone(...);
  ...
  begin
    ...
    if not OldColl.IsEmpty then
      for i := 0 to pred(OldColl.Count) do
        begin
          if DataOwner then                                    {!!.01}
            NewData := DupData(OldColl.Items[i])               {!!.01}
          else                                                 {!!.01}
            NewData := OldColl.Items[i];                       {!!.01}
          ...


006  2.00  EZDSLBSE.PAS  enh  DupData can be set at all times
----------------------------------------------------------------------
The restriction that DupData can only be set when the container is
empty has been removed. The change is to TAbstractContainer.SetDupData
in the EZDSLBSE.PAS unit.

procedure TAbstractContainer.SetDupData(NewFunc : TDupDataFunc); {!!.01}
  begin
    if Assigned(NewFunc) then
         FDupData := NewFunc
    else FDupData := EZAbstractDupData;
  end;


007  2.00  EZDSLLST.PAS  fix  Sorted lists are always cloned from
           EZDSLDBL.PAS       sorted lists
----------------------------------------------------------------------
If a linked list is sorted then only sorted lists can be cloned from
it and vice-versa. The linked lists' Clone constructors have been
enhanced so that the cloned list is sorted if the NewCompare parameter
is not nil. The change is to the Clone constructor of both TLinkList
and TDList.

TLinkList.Clone:

    if Assigned(NewCompare) then                               {!!.01}
      Compare := NewCompare                                    {!!.01}
    else                                                       {!!.01}
      Compare := OldList.Compare;                              {!!.01}
    ...
    if Assigned(NewCompare) then                               {!!.01}
         OldList.Iterate(SListSortedClone, false, Self)
    else OldList.Iterate(SListClone, false, Self);

TDList.Clone:

    if Assigned(NewCompare) then                               {!!.01}
      Compare := NewCompare                                    {!!.01}
    else                                                       {!!.01}
      Compare := OldList.Compare;                              {!!.01}
    ...
    if Assigned(NewCompare) then                               {!!.01}
         OldList.Iterate(SListSortedClone, false, Self)
    else OldList.Iterate(SListClone, false, Self);


008  2.00  EZDSLCOL.PAS  fix  TEZCollection.Assign always duped data
----------------------------------------------------------------------
The TEZCollection.Assign method always duplicated the data, whether
the collection was a data owner or not. The fix is to test for data
ownership, if true the data is duplicated, if false the pointer value
is copied over:

    if not Src.IsEmpty then
      for i := 0 to pred(Src.Count) do
        begin
          if IsDataOwner then                                  {!!.01}
            NewData := DupData(Src.Items[i])                   {!!.01}
          else                                                 {!!.01}
            NewData := Src.Items[i];                           {!!.01}
          try
            Insert(NewData);
          except
            if IsDataOwner then                                {!!.01}
              DisposeData(NewData);
            raise;                                             {!!.01}
          end;
        end;

009  3.00  EZDSLHSH.PAS  fix  The hash method can sometimes return a
                              negative number
----------------------------------------------------------------------
The result of the hash function is a longint, a signed 32-bit integer.
Taking the modulus of a negative number results in a negative number,
and so the htlHash method could be negative. As this is used as an
index into an array, one of several errors could occur.
The fix is to THashTable.htlHash in EZDSLHSH.PAS:

function THashTable.htlHash(const aKey : string) : integer;
var
  UCKey : string;
begin
  if not IgnoreCase then
    Result := htlHashFunc(aKey) mod htlTableSize
  else {ignore the case of characters} begin
    UCKey := AnsiUpperCase(aKey);
    Result := htlHashFunc(UCKey) mod htlTableSize;
  end;
  while (Result < 0) do                                        {!!.01}
    inc(Result, htlTableSize);                                 {!!.01}
end;

010  3.00  EZDSLBAR.PAS  enh  Added a boolean array class
----------------------------------------------------------------------
Added a new Boolean array (aka bit array, bitset, bitmap) class to
EZDSL. Source is found in EZDSLBAR.PAS.

011  3.01  EZDSLLST.PAS  fix  If Search successfully finds a data
           EZDSLDBL.PAS       object in a single & double linked list
                              it would not return the cursor.
----------------------------------------------------------------------
The equality block in the Search method did not set the Cursor
parameter. The fix to TLinkList.Search in EZDSLLST.PAS is as follows:

      if (CompResult < 0) then
        R := pred(M)
      else if (CompResult > 0) then
        L := succ(M)
      else begin
        Result := true;
        llNextN(CursorNumber+1);                               {!!.02}
        Exit;
      end;

The fix to TDList.Search in EZDSLDBL.PAS is as follows:

      if (CompResult < 0) then
        R := pred(M)
      else if (CompResult > 0) then
        L := succ(M)
      else begin
        Result := true;
        Cursor := TListCursor(TempCursor);                     {!!.02}
        Exit;
      end;

012  3.01  EZDSLOPT.INC  fix  Support for Delphi 4 & 5
           EZDSLBTR.PAS
           EZDSLTHD.PAS
----------------------------------------------------------------------
The changes were to remove integer promotion warnings.

In EZDSLBTR.PAS:

function Dye(Cursor, PKC : TTreeCursor) : TTreeCursor;
{$IFDEF Win32}
begin
  Result := (Cursor and longint($FFFFFFFD)) or (PKC and $2);   {!!.02}
end;
{$ELSE}

In EZDSLTHD.PAS:

  TezWaitableObject = class
    {-A Win32 Kernel synchronization object that can be waited on to
      be signalled and that can be released}
    protected {private}
      woLastError : DWORD;                                     {!!.02}
    protected
      ...
    public
      ...
      property Handle : THandle read woHandle;
      property LastError : DWORD read woLastError;             {!!.02}
    end;

013  3.02  EZDSLBAR.PAS  fix  Numerous fixes to boolean array class
----------------------------------------------------------------------
Too numerous to mention; lots of things broken. See source file.

014  3.02  EZDSLOPT.INC  fix  Support for Delphi 6
----------------------------------------------------------------------
Adding special compiler define blocks to support Delphi 6.
